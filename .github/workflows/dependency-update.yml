name: Dependency Updates

on:
  schedule:
    # Запускается каждый понедельник в 9:00 UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Позволяет запускать вручную

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools
    
    - name: Update requirements
      run: |
        # Создаем backup текущих requirements
        cp requirements.txt requirements.txt.backup
        cp requirements-dev.txt requirements-dev.txt.backup
        
        # Обновляем зависимости (если есть .in файлы)
        if [ -f requirements.in ]; then
          pip-compile --upgrade requirements.in
        fi
        
        if [ -f requirements-dev.in ]; then
          pip-compile --upgrade requirements-dev.in
        fi
    
    - name: Check for security vulnerabilities
      run: |
        pip install safety
        safety check --json --output safety-report.json || true
        
        # Если есть уязвимости, создаем issue
        if [ -s safety-report.json ]; then
          echo "Security vulnerabilities found!"
          cat safety-report.json
        fi
    
    - name: Test updated dependencies
      run: |
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
        # Запускаем быстрые тесты
        pytest tests/ -x --tb=short
    
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'Automated dependency updates'
        body: |
          ## Automated Dependency Updates
          
          This PR contains automated updates to project dependencies.
          
          ### Changes
          - Updated Python packages to latest versions
          - Ran security checks
          - Verified tests pass with new dependencies
          
          ### Security Report
          Please review the security report in the CI logs.
          
          ### Review Checklist
          - [ ] Review dependency changes
          - [ ] Check for breaking changes
          - [ ] Verify all tests pass
          - [ ] Check security report
        branch: automated/dependency-updates
        delete-branch: true
        labels: |
          dependencies
          automated
        reviewers: |
          # Добавьте имена пользователей для review
        assignees: |
          # Добавьте имена пользователей для assign

  check-outdated:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Check for outdated packages
      run: |
        pip list --outdated --format=json > outdated-packages.json
        
        # Создаем читаемый отчет
        echo "## Outdated Packages Report" > outdated-report.md
        echo "" >> outdated-report.md
        echo "| Package | Current | Latest | Type |" >> outdated-report.md
        echo "|---------|---------|--------|------|" >> outdated-report.md
        
        python -c "
import json
import sys

try:
    with open('outdated-packages.json', 'r') as f:
        packages = json.load(f)
    
    for pkg in packages:
        print(f\"| {pkg['name']} | {pkg['version']} | {pkg['latest_version']} | {pkg['latest_filetype']} |\")
except:
    print('No outdated packages found or error reading file')
" >> outdated-report.md
    
    - name: Upload outdated packages report
      uses: actions/upload-artifact@v3
      with:
        name: outdated-packages-report
        path: |
          outdated-packages.json
          outdated-report.md